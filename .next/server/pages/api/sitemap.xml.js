"use strict";(()=>{var e={};e.id=654,e.ids=[654],e.modules={1185:e=>{e.exports=require("mongoose")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},5356:(e,t,r)=>{r.r(t),r.d(t,{config:()=>u,default:()=>d,routeModule:()=>m});var o={};r.r(o),r.d(o,{default:()=>c});var n=r(1802),i=r(7153),a=r(6249),l=r(1053),s=r(1894);async function c(e,t){if("GET"!==e.method){t.setHeader("Allow",["GET"]),t.status(405).end(`Method ${e.method} Not Allowed`);return}try{await (0,l.Z)();let e=(await s.Z.find({},"updatedAt").sort({updatedAt:-1})).map(e=>({url:`/blog/${e._id}`,priority:"0.7",changefreq:"monthly",lastmod:e.updatedAt.toISOString().split("T")[0]})),r=[{url:"/",priority:"1.0",changefreq:"weekly"},{url:"/blog",priority:"0.9",changefreq:"daily"},{url:"/books",priority:"0.8",changefreq:"monthly"},...e],o=`<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${r.map(e=>`  <url>
    <loc>https://amldecoded.com${e.url}</loc>
    <lastmod>${e.lastmod||new Date().toISOString().split("T")[0]}</lastmod>
    <changefreq>${e.changefreq}</changefreq>
    <priority>${e.priority}</priority>
  </url>`).join("\n")}
</urlset>`;t.setHeader("Content-Type","application/xml"),t.status(200).send(o)}catch(e){console.error("Error generating sitemap:",e),t.status(500).json({error:"Failed to generate sitemap"})}}let d=(0,a.l)(o,"default"),u=(0,a.l)(o,"config"),m=new n.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/sitemap.xml",pathname:"/api/sitemap.xml",bundlePath:"",filename:""},userland:o})},1053:(e,t,r)=>{r.d(t,{Z:()=>l});var o=r(1185),n=r.n(o);let i=process.env.MONGODB_URI;if(!i)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let l=async function(){if(a.conn)return a.conn;a.promise||(a.promise=n().connect(i,{bufferCommands:!1,maxPoolSize:5,serverSelectionTimeoutMS:1e4,socketTimeoutMS:45e3,family:4,maxIdleTimeMS:3e4}).then(e=>(console.log("✅ MongoDB connected successfully to:",i.replace(/\/\/.*@/,"//***:***@")),e)).catch(e=>{throw console.error("❌ MongoDB connection failed:",e),e}));try{a.conn=await a.promise}catch(e){throw a.promise=null,console.error("❌ MongoDB connection error:",e),e}return a.conn}},1894:(e,t,r)=>{r.d(t,{Z:()=>a});var o=r(1185),n=r.n(o);let i=new o.Schema({title:{type:String,required:!0,trim:!0},content:{type:String,required:!0},author:{type:String,required:!0,trim:!0},image:{type:String,required:!1}},{timestamps:!0}),a=n().models.Blog||n().model("Blog",i)},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=5356);module.exports=r})();